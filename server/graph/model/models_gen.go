// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

// Represents an achievement badge that can be awarded to users.
type AchievementBadge struct {
	// The unique identifier of the achievement badge.
	ID string `json:"id"`
	// The name of the achievement badge.
	Name string `json:"name"`
	// A description of the achievement badge.
	Description string `json:"description"`
	// The URL of the icon representing the achievement badge.
	IconURL string `json:"iconUrl"`
	// The date and time when the achievement badge was created.
	CreatedAt string `json:"createdAt"`
}

// Detailed information about an achievement badge.
type AchievementBadgeDetail struct {
	BadgeID     string `json:"badgeId"`
	Name        string `json:"name"`
	Description string `json:"description"`
	IconURL     string `json:"iconUrl"`
	CreatedAt   string `json:"createdAt"`
}

// Represents an activity log entry for a user.
type ActivityLog struct {
	ID            string `json:"id"`
	UserID        string `json:"userId"`
	ActivityType  string `json:"activityType"`
	Description   string `json:"description"`
	ChangedObject string `json:"changedObject"`
	ChangedField  string `json:"changedField"`
	From          string `json:"from"`
	To            string `json:"to"`
	Timestamp     string `json:"timestamp"`
}

// Detailed information about an activity log entry.
type ActivityLogDetail struct {
	LogID         string `json:"logId"`
	ActivityType  string `json:"activityType"`
	Description   string `json:"description"`
	ChangedObject string `json:"changedObject"`
	ChangedField  string `json:"changedField"`
	From          string `json:"from"`
	To            string `json:"to"`
	Timestamp     string `json:"timestamp"`
}

// Response type for adding a family member.
type AddFamilyMemberResponse struct {
	MemberID string `json:"memberId"`
	Message  string `json:"message"`
}

// Response type for adding a health metric.
type AddHealthMetricResponse struct {
	MetricID string `json:"metricId"`
	Message  string `json:"message"`
}

// Response type for adding a medical record.
type AddMedicalRecordResponse struct {
	RecordID string `json:"recordId"`
	Message  string `json:"message"`
}

// Response type for adding a medication.
type AddMedicationResponse struct {
	MedicationID string `json:"medicationId"`
	Message      string `json:"message"`
}

// Response type for awarding an achievement to a user.
type AwardAchievementResponse struct {
	UserAchievementID string `json:"userAchievementId"`
	Message           string `json:"message"`
}

// Response type for creating an achievement badge.
type CreateAchievementBadgeResponse struct {
	BadgeID string `json:"badgeId"`
	Message string `json:"message"`
}

// Response type for creating a medication reminder.
type CreateMedicationReminderResponse struct {
	ReminderID string `json:"reminderId"`
	Message    string `json:"message"`
}

// Response type for creating a treatment schedule.
type CreateTreatmentScheduleResponse struct {
	ScheduleID string `json:"scheduleId"`
	Message    string `json:"message"`
}

// Response type for creating a user.
type CreateUserResponse struct {
	UserID  string `json:"userId"`
	Message string `json:"message"`
}

// Response type for deleting a family member.
type DeleteFamilyMemberResponse struct {
	Message string `json:"message"`
}

// Response type for deleting a health metric.
type DeleteHealthMetricResponse struct {
	Message string `json:"message"`
}

// Response type for deleting a medical record.
type DeleteMedicalRecordResponse struct {
	Message string `json:"message"`
}

// Response type for deleting a medication reminder.
type DeleteMedicationReminderResponse struct {
	Message string `json:"message"`
}

// Response type for deleting a medication.
type DeleteMedicationResponse struct {
	Message string `json:"message"`
}

// Response type for deleting a treatment schedule.
type DeleteTreatmentScheduleResponse struct {
	Message string `json:"message"`
}

// Response type for deleting a user.
type DeleteUserResponse struct {
	Message string `json:"message"`
}

// Response type for evaluating a health risk assessment.
type EvaluateHealthRiskAssessmentResponse struct {
	AssessmentID    string `json:"assessmentId"`
	RiskLevel       string `json:"riskLevel"`
	Recommendations string `json:"recommendations"`
}

// Represents a family member linked to a user.
type FamilyMember struct {
	ID            string `json:"id"`
	UserID        string `json:"userId"`
	PatientUserID string `json:"patient_userId"`
	Relationship  string `json:"relationship"`
	AccessLevel   int    `json:"accessLevel"`
	CreatedAt     string `json:"createdAt"`
}

// Detailed information about a family member.
type FamilyMemberDetail struct {
	MemberID     string `json:"memberId"`
	FamilyID     string `json:"familyId"`
	Name         string `json:"name"`
	PhoneNumber  string `json:"phoneNumber"`
	Relationship string `json:"relationship"`
	AccessLevel  int    `json:"accessLevel"`
}

// Input type for a filled questionnaire.
type FilledQuestionnaire struct {
	QuestionnaireID int         `json:"questionnaireId"`
	Responses       []*Response `json:"responses"`
}

// Represents a recommendation for a food item.
type FoodRecommendation struct {
	Name string `json:"name"`
}

// Represents the specification of a food item.
type FoodSpec struct {
	Name    string  `json:"name"`
	Value   float64 `json:"value"`
	Unit    string  `json:"unit"`
	HowHigh float64 `json:"howHigh"`
}

// Represents a collection of food specifications.
type FoodSpecs struct {
	Specs        []*FoodSpec `json:"specs"`
	HowRecommend float64     `json:"howRecommend"`
}

// Represents a health metric recorded for a user.
type HealthMetric struct {
	ID         string  `json:"id"`
	UserID     string  `json:"userId"`
	MetricType string  `json:"metricType"`
	Value      float64 `json:"value"`
	Unit       string  `json:"unit"`
	RecordedAt string  `json:"recordedAt"`
	CreatedAt  string  `json:"createdAt"`
}

// Detailed information about a health metric.
type HealthMetricDetail struct {
	MetricID   string  `json:"metricId"`
	MetricType string  `json:"metricType"`
	Value      float64 `json:"value"`
	Unit       string  `json:"unit"`
	RecordedAt string  `json:"recordedAt"`
}

// Represents a health response in a risk assessment.
type HealthResponse struct {
	QuestionID int     `json:"questionId"`
	Choice     string  `json:"choice"`
	Answer     *string `json:"answer,omitempty"`
}

// Represents a health risk assessment for a user.
type HealthRiskAssessment struct {
	ID                string            `json:"id"`
	UserID            string            `json:"userId"`
	QuestionnaireData []*HealthResponse `json:"questionnaireData"`
	RiskLevel         string            `json:"riskLevel"`
	Recommendations   string            `json:"recommendations"`
	CreatedAt         string            `json:"createdAt"`
}

// Detailed response for a health risk assessment.
type HealthRiskAssessmentDetailResponse struct {
	AssessmentID      string            `json:"assessmentId"`
	QuestionnaireData []*HealthResponse `json:"questionnaireData"`
	RiskLevel         string            `json:"riskLevel"`
	Recommendations   string            `json:"recommendations"`
	CreatedAt         string            `json:"createdAt"`
}

// Response type for logging in a user.
type LoginUserResponse struct {
	UserID  string `json:"userId"`
	Token   *Token `json:"token"`
	Message string `json:"message"`
}

// Represents a medical record for a user.
type MedicalRecord struct {
	ID         string `json:"id"`
	UserID     string `json:"userId"`
	RecordType string `json:"recordType"`
	Content    string `json:"content"`
	CreatedAt  string `json:"createdAt"`
	UpdatedAt  string `json:"updatedAt"`
}

// Detailed information about a medical record.
type MedicalRecordDetail struct {
	RecordID   string `json:"recordId"`
	RecordType string `json:"recordType"`
	Content    string `json:"content"`
	CreatedAt  string `json:"createdAt"`
}

// Represents a medication prescribed to a user.
type Medication struct {
	ID        string  `json:"id"`
	Name      string  `json:"name"`
	Dosage    float64 `json:"dosage"`
	Unit      string  `json:"unit"`
	Frequency string  `json:"frequency"`
	Inventory float64 `json:"inventory"`
	UserID    string  `json:"userId"`
	CreatedAt string  `json:"createdAt"`
	UpdatedAt string  `json:"updatedAt"`
}

// Detailed information about a medication.
type MedicationDetail struct {
	MedicationID string  `json:"medicationId"`
	Name         string  `json:"name"`
	Dosage       float64 `json:"dosage"`
	Unit         string  `json:"unit"`
	Frequency    string  `json:"frequency"`
	Inventory    float64 `json:"inventory"`
}

// Represents a reminder for taking a medication.
type MedicationReminder struct {
	ID           string `json:"id"`
	MedicationID string `json:"medicationId"`
	UserID       string `json:"userId"`
	ReminderTime string `json:"reminderTime"`
	IsTaken      bool   `json:"isTaken"`
	CreatedAt    string `json:"createdAt"`
}

// Detailed information about a medication reminder.
type MedicationReminderDetail struct {
	ReminderID   string `json:"reminderId"`
	MedicationID string `json:"medicationId"`
	ReminderTime string `json:"reminderTime"`
	IsTaken      bool   `json:"isTaken"`
}

type Mutation struct {
}

// Represents a password change request.
type PasswordChange struct {
	ID        string `json:"id"`
	User      string `json:"user"`
	Token     string `json:"token"`
	CreatedAt string `json:"createdAt"`
}

// Detailed information about a patient.
type PatientDetail struct {
	PatientID    string `json:"patientId"`
	Name         string `json:"name"`
	PhoneNumber  string `json:"phoneNumber"`
	Relationship string `json:"relationship"`
	AccessLevel  int    `json:"accessLevel"`
}

// Detailed information about a user profile.
type ProfileDetail struct {
	ID          string `json:"id"`
	Name        string `json:"name"`
	PhoneNumber string `json:"phoneNumber"`
	Role        string `json:"role"`
	CreatedAt   string `json:"createdAt"`
}

type Query struct {
}

// Represents a question in a health risk assessment questionnaire.
type Question struct {
	QuestionID   int      `json:"questionId"`
	Question     string   `json:"question"`
	QuestionType int      `json:"questionType"`
	Choices      []string `json:"choices,omitempty"`
}

// Represents a questionnaire object containing multiple questions.
type QuestionnaireObject struct {
	QuestionnaireID int         `json:"questionnaireId"`
	Data            []*Question `json:"data"`
}

// Represents a record object containing data.
type RecordObject struct {
	Data string `json:"data"`
}

// Response type for requesting a password reset.
type RequestPasswordResetResponse struct {
	Message string `json:"message"`
}

// Response type for resetting a password.
type ResetPasswordResponse struct {
	Message string `json:"message"`
}

// Input type for a response to a questionnaire.
type Response struct {
	QuestionID int     `json:"questionId"`
	Choice     string  `json:"choice"`
	Answer     *string `json:"answer,omitempty"`
}

// Response type for sharing a profile.
type ShareProfileResponse struct {
	Message string `json:"message"`
}

// Response type for taking a medication.
type TakeMedicationResponse struct {
	Message string `json:"message"`
}

// Represents a token for user authentication.
type Token struct {
	ID                 string `json:"id"`
	User               string `json:"user"`
	AccessToken        string `json:"accessToken"`
	RefreshToken       string `json:"refreshToken"`
	AccessTokenExpiry  string `json:"accessTokenExpiry"`
	RefreshTokenExpiry string `json:"refreshTokenExpiry"`
	Device             string `json:"device"`
	CreatedAt          string `json:"createdAt"`
	UpdatedAt          string `json:"updatedAt"`
}

// Represents a treatment schedule for a user.
type TreatmentSchedule struct {
	ID            string  `json:"id"`
	UserID        string  `json:"userId"`
	TreatmentType string  `json:"treatmentType"`
	ScheduledTime string  `json:"scheduledTime"`
	Location      string  `json:"location"`
	Notes         *string `json:"notes,omitempty"`
}

// Detailed information about a treatment schedule.
type TreatmentScheduleDetail struct {
	ScheduleID    string  `json:"scheduleId"`
	TreatmentType string  `json:"treatmentType"`
	ScheduledTime string  `json:"scheduledTime"`
	Location      string  `json:"location"`
	Notes         *string `json:"notes,omitempty"`
}

// Response type for unsharing a profile.
type UnshareProfileResponse struct {
	Message string `json:"message"`
}

// Response type for updating a family member.
type UpdateFamilyMemberResponse struct {
	MemberID string `json:"memberId"`
	Message  string `json:"message"`
}

// Response type for updating a health metric.
type UpdateHealthMetricResponse struct {
	MetricID string `json:"metricId"`
	Message  string `json:"message"`
}

// Response type for updating a medical record.
type UpdateMedicalRecordResponse struct {
	RecordID string `json:"recordId"`
	Message  string `json:"message"`
}

// Response type for updating a medication reminder.
type UpdateMedicationReminderResponse struct {
	ReminderID string `json:"reminderId"`
	Message    string `json:"message"`
}

// Response type for updating a medication.
type UpdateMedicationResponse struct {
	MedicationID string `json:"medicationId"`
	Message      string `json:"message"`
}

// Response type for updating a treatment schedule.
type UpdateTreatmentScheduleResponse struct {
	ScheduleID string `json:"scheduleId"`
	Message    string `json:"message"`
}

// Response type for updating a user.
type UpdateUserResponse struct {
	UserID  string `json:"userId"`
	Message string `json:"message"`
}

// Represents a user in the system.
type User struct {
	ID          string  `json:"id"`
	PhoneNumber string  `json:"phoneNumber"`
	Password    string  `json:"password"`
	Name        string  `json:"name"`
	Points      float64 `json:"points"`
	CreatedAt   string  `json:"createdAt"`
	UpdatedAt   string  `json:"updatedAt"`
	LastLogin   string  `json:"lastLogin"`
	Status      int     `json:"status"`
	Role        string  `json:"role"`
}

// Represents a user's achievement, linking a user to a badge.
type UserAchievement struct {
	ID        string `json:"id"`
	UserID    string `json:"userId"`
	BadgeID   string `json:"badgeId"`
	EarnedAt  string `json:"earnedAt"`
	CreatedAt string `json:"createdAt"`
}

// Detailed information about a user's achievement.
type UserAchievementDetail struct {
	UserAchievementID string `json:"userAchievementId"`
	BadgeID           string `json:"badgeId"`
	EarnedAt          string `json:"earnedAt"`
}

// Detailed information about a user.
type UserDetailResponse struct {
	UserID      string  `json:"userId"`
	PhoneNumber string  `json:"phoneNumber"`
	Name        string  `json:"name"`
	Points      float64 `json:"points"`
	Role        string  `json:"role"`
	CreatedAt   string  `json:"createdAt"`
	LastLogin   *string `json:"lastLogin,omitempty"`
}

// Represents a record of points earned by a user.
type UserPointRecord struct {
	ID           string  `json:"id"`
	UserID       string  `json:"userId"`
	PointsEarned float64 `json:"pointsEarned"`
	Reason       string  `json:"reason"`
	EarnedAt     string  `json:"earnedAt"`
}

// Detailed information about a user's point record.
type UserPointRecordDetail struct {
	RecordID     string  `json:"recordId"`
	PointsEarned float64 `json:"pointsEarned"`
	Reason       string  `json:"reason"`
	EarnedAt     string  `json:"earnedAt"`
}

// Response type for earning points.
type EarnPointsResponse struct {
	UpdatedPoints float64 `json:"updatedPoints"`
	Message       string  `json:"message"`
}
